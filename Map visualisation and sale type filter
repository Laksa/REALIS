<%-- 
    Document   : index
    Created on : Oct 12, 2014, 2:02:11 PM
    Author     : ASUS
--%>
 
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>

<html>
     <head>

        <title>Leaflet Test</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

        <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
        <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

        <style>
            #map { 
                height: 500px; 
                width: 900px;
            }
        </style>

    </head>

    <body>
        <jsp:include page="FilterCriteria.html" /> 
        
     <div id="map"></div>
      
        <script>
        var map = L.map('map').setView([1.3667, 103.8], 11);//create map
        
        L.tileLayer('http://{s}.tiles.mapbox.com/v3/realis.jo4acied/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            maxZoom: 18
        }).addTo(map); //create visualisation layer

        var geojsonFeature = [
        {
            "type": "Feature",
            "properties": {
                "project_name": "VILLA AZURA",
                "property_type": "Condominium",
                "sale_type": "Resale",
                "unit_price": 13960,
                "popupContent": "First Transaction"
            },
            "geometry": {
                "type": "Point",
                "coordinates": [1.3667, 103.8]
            }
        },
        {
            "type": "Feature",
            "properties": {
                "project_name": "THE SKYWOODS",
                "property_type": "Condominium",
                "sale_type": "New Sale",
                "unit_price": 13063,
                "popupContent": "Second Transaction"
            },
            "geometry": {
                "type": "Point",
                "coordinates": [1.2826, 103.8584]
            }
        },
        {
            "type": "Feature",
            "properties": {
                "project_name": "VILLA AZURA",
                "property_type": "Condominium",
                "sale_type": "New Sale",
                "unit_price": 13962,
                "popupContent": "First Transaction"
            },
            "geometry": {
                "type": "Point",
                "coordinates": [1.38946,103.83041]
            }
        }

    ];

    var geojsonMarkerOptions = {
        radius: 8,
        fillColor: "#ff7800",
        weight: 1,
        opacity: 1,
        fillOpacity: 0.8
    };

    var layer=L.geoJson(geojsonFeature, {
        pointToLayer: function(feature) {
            return L.circleMarker(feature.geometry.coordinates);
        },
        style: function(feature) {
            switch (feature.properties.sale_type) {
                case 'New Sale':
                    return {color: "#ff0000"};
                case 'Resale':
                    return {color: "#0000ff"};
            }
        },
        onEachFeature: onEachFeature
        
    }).addTo(map);  
       
    // A function to put popups in each data point added by the layer
    function onEachFeature(feature, layer) {
    // does this feature have a property named popupContent?
        if (feature.properties && feature.properties.popupContent) {
            layer.bindPopup(feature.properties.popupContent);

        }

    }
      //Creates an empty layer group
      var newsales=L.layerGroup([]); 
      
      //Iterate through the geojson features and those who matched the new sales criteria 
      //will be assigned a marker. It will then be added to the layer group
      for(var i=0;i<geojsonFeature.length;i++){
          var geojsonsale=geojsonFeature[i];
           if(geojsonsale.properties.sale_type=="New Sale"){
                var sale=L.marker(geojsonsale.geometry.coordinates);
                newsales.addLayer(sale);
            }    
        }
        //creates an overlay
        var overlaynewsales = {
            "New Sales": newsales
            };
            
        //Assigning control to overlays, create checkboxes and added to map   
        L.control.layers(null,overlaynewsales).addTo(map);
        
        
        </script>
        
    </body>
</html>
